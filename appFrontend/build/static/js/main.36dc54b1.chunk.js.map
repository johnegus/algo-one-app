{"version":3,"sources":["config.js","store/actions/current-user.js","store/actions/authentication.js","util/route-util.js","LoginPanel.js","LogoutButton.js","util/polygon.js","store/actions/positions.js","store/actions/ui.js","store/actions/history.js","store/actions/current-position.js","PositionDetail.js","store/actions/watched-stocks.js","dashboard/Title.js","dashboard/Orders.js","dashboard/Deposits.js","NewsFeed.js","TopMovers.js","TopLosers.js","UserDetail.js","store/actions/current-watched-stock.js","WatchListDetail.js","search/SearchContext.js","search/SearchResults.js","search/SearchApp.js","search/SearchContainer.js","PositionSidebar.js","SignUpForm.js","NotFound.js","App.js","store/configureStore.js","store/reducers/authentication.js","store/reducers/positions.js","store/reducers/ui.js","store/reducers/current-position.js","store/reducers/current-user.js","store/reducers/watched-stocks.js","store/reducers/current-watched-stock.js","store/reducers/history.js","index.js","leaf-clipart-12-transparent.png"],"names":["imageUrl","process","REACT_APP_IMAGE_URL","baseUrl","REACT_APP_BASEURL","setCurrentUser","id","type","setToken","token","login","email","password","dispatch","a","fetch","method","headers","body","JSON","stringify","response","ok","json","user","window","localStorage","setItem","signUp","PrivateRoute","Component","component","rest","render","props","needLogin","to","ProtectedRoute","LoginPanel","useState","setEmail","setPassword","useDispatch","handleSubmit","e","preventDefault","className","src","leaf","alt","onSubmit","placeholder","value","onChange","target","LogoutButton","onClick","getState","authentication","Authorization","removeItem","polygonApi","baseURL","api","apisauce","create","timeout","params","apiKey","getQuote","symbol","get","load","list","createPosition","data","getPositions","exitPosition","location","replace","historyList","createInstance","getHistoricalData","setCurrent","current","PositionDetail","positions","getOnePosition","stories","setStories","isLoading","setIsLoading","stockChartXValues","setstockChartXValues","stockChartYValues","setstockChartYValues","stockSymbol","setstockSymbol","stockName","setstockName","currentPrice","setcurrentPrice","buyPrice","setbuyPrice","shares","setshares","livedescription","setCompanyDescription","liveimage","setImage","liveexchange","setExchange","soldPrice","setSoldPrice","useParams","useEffect","API_CALL","then","fetchCompanyInfo","fetchPositionNews","stockChartXValuesFunction","stockChartYValuesFunction","key","console","log","push","parseFloat","toFixed","fetchLivePositions","CircularProgress","callback","lineChartData","labels","datasets","label","fill","backgroundColor","borderColor","handleClick","boughtPrice","upOrDown","options","legend","display","elements","point","radius","scales","yAxes","ticks","beginAtZero","xAxes","reverse","createdAt","required","isNaN","map","story","timestamp","href","url","title","summary","height","width","image","PositionDetailContainer","useSelector","state","currentPosition","history","Object","values","watchedList","getWatchedStocks","exitWatchedStock","Title","Typography","variant","color","gutterBottom","children","Orders","rows","setRows","gridRows","instance","date","transaction","deposit","companyName","purchasePrice","percentChange","mapHistoryToRows","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","position","toUpperCase","style","columns","field","headerName","pageSize","checkboxSelection","OrdersContainer","useStyles","makeStyles","depositContext","flex","Deposits","classes","year","Date","getFullYear","month","getMonth","getDate","payload","takeOut","deposits","reduce","accumulator","DepositsContainer","NewsFeed","loading","TopMovers","slice","ticker","price","changes","changesPercentage","TopLosers","UserDetail","sum","parseInt","totalCash","totalAssets","doughnutData","borderWidth","length","responsive","UserDetailContainer","setCurrentWatchedStock","WatchListDetail","watchedStocks","getOneWatchedStock","WatchedStockDetailContainer","currentWatchedStock","SearchContext","createContext","SearchDetail","createWatchedStock","context","useContext","searchQuery","catch","error","SearchDetailContainer","hideForm","SearchApp","inputValue","setInputValue","setSearchQuery","SearchContainer","Provider","SearchResults","PositionSidebar","formVisible","positionId","Number","Math","random","round","watchedStock","exact","path","PositionSidebarContainer","SignUpForm","name","setName","cashValue","setCashValue","confirmPassword","setConfirmPassword","updateProperty","newUser","NotFound","App","loadToken","loaded","setLoaded","AppContainer","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","action","newState","freeze","merge","ui","currentUser","store","initialState","createStore","applyMiddleware","thunk","configureStore","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.36dc54b1.chunk.js","sourcesContent":["export const imageUrl = process.env.REACT_APP_IMAGE_URL || 'http://localhost:8000';\nexport const baseUrl = process.env.REACT_APP_BASEURL || `${imageUrl}/api`;\nexport const POLYGON_URL = \"https://api.polygon.io/\";\nexport const POLYGON_KEY = 'VkrkWBmpkEzcfu554MV9td_zILRqS2w8';","import { baseUrl } from \"../../config\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const setCurrentUser = (id) => ({ type: SET_CURRENT_USER, id });\n\nexport const getOneUser = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/users/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const current = await response.json();\n    dispatch(setCurrentUser(current));\n  }\n};","import { baseUrl } from \"../../config\";\nimport {setCurrentUser} from './current-user'\nexport const TOKEN_KEY = \"TOKEN_KEY\";\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport const REMOVE_TOKEN = \"REMOVE_TOKEN\";\n\nexport const removeToken = (token) => ({ type: REMOVE_TOKEN });\nexport const setToken = (token) => ({ type: SET_TOKEN, token });\n\nexport const loadToken = () => async (dispatch) => {\n  const token = window.localStorage.getItem(TOKEN_KEY);\n  if (token) {\n    dispatch(setToken(token));\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  \n  const response = await fetch(`${baseUrl}/session`, {\n    method: \"put\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (response.ok) {\n    const { token, user: {id}} = await response.json();\n    \n    window.localStorage.setItem(TOKEN_KEY, token);\n    dispatch(setToken(token));\n    dispatch(setCurrentUser(id));\n  }\n};\n\nexport const logout = () => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/session`, {\n    method: \"delete\",\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  if (response.ok) {\n    window.localStorage.removeItem(TOKEN_KEY);\n    dispatch(removeToken());\n  }\n};\n\nexport const signUp = (user) => async (dispatch) => {\n  const response = await fetch(`${baseUrl}/users`, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user),\n  });\n  if (response.ok) {\n    const { token } = await response.json();\n    window.localStorage.setItem(TOKEN_KEY, token);\n    dispatch(setToken(token));\n  }\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      rest.needLogin === true ? (\n        <Redirect to=\"/login\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      rest.needLogin !== true ? <Redirect to=\"/\" /> : <Component {...props} />\n    }\n  />\n);\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./store/actions/authentication\";\nimport {Link} from 'react-router-dom'; \nimport leaf from './leaf-clipart-12-transparent.png';\n\n\nconst LoginPanel = (props) => {\n  const [email, setEmail] = useState(\"demo@example.com\");\n  const [password, setPassword] = useState(\"password\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n\n  return (\n    <main className=\"centered middled\">\n      <img src={leaf} alt=\"img\" />\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={updateEmail}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={updatePassword}\n        />\n        <button type=\"submit\">Login</button>\n        <Link to=\"/signup\">\n     <button type=\"button\">\n     Sign Up\n     </button>\n      </Link>\n      </form>\n    </main>\n  );\n};\n\nexport default LoginPanel;\n","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"./store/actions/authentication\";\nimport {Link} from 'react-router-dom'; \n\n\nconst LogoutButton = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <>\n    \n    <div id=\"logout-button-holder\">\n    <Link to=\"/\">\n          <button type=\"button\">\n          Profile\n          </button>\n        </Link>\n      <button onClick={handleClick}>Logout</button>\n    </div>\n    </>\n    \n  );\n};\n\nexport default LogoutButton;\n","import apisauce from 'apisauce';\n\nimport {POLYGON_URL, POLYGON_KEY} from '../config';\n\nconst polygonApi = (baseURL = POLYGON_URL) => {\n\n    const api = apisauce.create({\n        baseURL,\n        timeout: 5000\n    })\n    const params = {\n        apiKey: POLYGON_KEY\n    } \n    const getQuote = symbol => api.get(`https://api.polygon.io/v1/meta/symbols/${symbol}/news?perpage=10&page=1&apiKey=${params.apiKey}`);\n\n    return {\n        getQuote\n    }\n};\n\nexport default polygonApi;","import { baseUrl } from \"../../config\";\nimport { hideForm } from \"./ui\";\n\nexport const LOAD = \"LOAD\";\nexport const EXIT = 'EXIT';\n\nexport const load = (list) => ({ type: LOAD, list });\n\n\n\nexport const createPosition = (data) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    // dispatch(hideForm());\n    dispatch(getPositions());\n    dispatch(hideForm());\n  }\n};\n\n\n\n\nexport const getPositions = () => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n  }\n};\n\nexport const exitPosition = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions/${id}`, {\n    method: \"delete\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    dispatch(getPositions());\n    window.location.replace('/')\n  }\n};","export const HIDE_FORM = \"HIDE_FORM\";\nexport const SHOW_FORM = \"SHOW_FORM\";\n\nexport const showForm = () => ({ type: SHOW_FORM });\nexport const hideForm = () => ({ type: HIDE_FORM });\n","import { baseUrl } from \"../../config\";\n\nexport const LOAD_HISTORY = \"LOAD_HISTORY\";\nexport const load = (historyList) => ({ type: LOAD_HISTORY, historyList });\n\nexport const createInstance = (data) => async (dispatch, getState) => {\n    const {\n      authentication: { token },\n    } = getState();\n    const response = await fetch(`${baseUrl}/history`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(data),\n    });\n  \n    if (response.ok) {\n      \n      dispatch(getHistoricalData());\n    }\n  };\n  \n  \n  \n  \n  export const getHistoricalData = () => async (dispatch, getState) => {\n    const {\n      authentication: { token },\n    } = getState();\n    const response = await fetch(`${baseUrl}/history`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  \n    if (response.ok) {\n      const historyList = await response.json();\n      dispatch(load(historyList));\n    }\n  };","import { baseUrl } from \"../../config\";\n\nexport const SET_CURRENT = \"SET_CURRENT\";\n\nexport const setCurrent = (current) => ({ type: SET_CURRENT, current });\n\nexport const getOnePosition = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const current = await response.json();\n    dispatch(setCurrent(current));\n  }\n};\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport polygonApi from './util/polygon';\nimport { Line } from 'react-chartjs-2';\nimport { exitPosition } from \"./store/actions/positions\";\nimport { createPosition } from \"./store/actions/positions\";\nimport { createInstance } from \"./store/actions/history\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nimport { getOnePosition } from \"./store/actions/current-position\";\n\nconst PositionDetail = ({ positions, getOnePosition, createPosition, createInstance }) => {\n  const [stories, setStories] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); \n  const [stockChartXValues, setstockChartXValues] = useState([]);\n  const [stockChartYValues, setstockChartYValues] = useState([]);\n  const [stockSymbol, setstockSymbol] = useState(\"\");\n  const [stockName, setstockName] = useState(\"\");\n  const [currentPrice, setcurrentPrice] = useState(\"\");\n  const [buyPrice, setbuyPrice] = useState(\"\");\n  const [shares, setshares] = useState(\"\");\n  const [livedescription, setCompanyDescription] = useState('');\n  const [liveimage, setImage] = useState('');\n  const [liveexchange, setExchange] = useState('');\n  const [soldPrice, setSoldPrice] = useState('');\n\n\n\n  \n\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  \n\n  useEffect(() => {\n    getOnePosition(id);\n  }, [id]);\n\n  //financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    if (!positions) {\n      return;\n    }\n    const fetchCompanyInfo = async () =>{\n      const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n      let stockSymbol = positions.stockSymbol\n      let API_CALL = `https://financialmodelingprep.com/api/v3/profile/${stockSymbol}?apikey=${API_Key}`;\n     \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            setstockName(data[0]['companyName'])\n            setCompanyDescription(data[0]['description'])\n            setExchange(data[0]['exchangeShortName'])\n            setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [positions]);\n  //polygon news fetch -------------------------------------------------------------\n  useEffect(() => {\n    if (!positions) {\n      return;\n    }\n    const fetchPositionNews = async () =>{\n      const polygon = polygonApi()\n      polygon.getQuote(positions.stockSymbol).then((response) => {\n      \n      \n        if(response.ok){\n          setStories(response.data)\n        }\n      });\n    }\n    fetchPositionNews();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [positions]);\n //alphavantage stock fetch -------------------------------------------------------------\n useEffect(() => {\n  if (!positions) {\n    return;\n  }\n  const fetchLivePositions = async () =>{\n    \n    const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n    let stockSymbol = positions.stockSymbol\n    let API_CALL = `https://financialmodelingprep.com/api/v3/historical-chart/5min/${stockSymbol}?apikey=${API_Key}`;\n      let stockChartXValuesFunction = [];\n      let stockChartYValuesFunction = [];\n    \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            console.log('FMP Historical data Position')\n              console.log(data)\n              // setVolume(data['Time Series (5min)'][0][\"5. volume\"]);\n              setstockSymbol(positions.stockSymbol);\n              for(let key in data){\n                  stockChartXValuesFunction.push(key);\n                  stockChartYValuesFunction.push(data[key]['open']);\n              }\n              setIsLoading(false);\n\n              setstockChartXValues(stockChartXValuesFunction)\n              setstockChartYValues(stockChartYValuesFunction)\n              setcurrentPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n              setSoldPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n          }\n      )\n        }\n    fetchLivePositions();\n  \n\n}, [positions]);\n\n//   // fetching latest quote for each stock   \n//   useEffect(() => {    \n//     if (!positions) {\n//       return;\n//     }                                \n//   const fetchCompanyInfo = async () =>{\n\n//     const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n//     let stockSymbol = positions.stockSymbol\n//     let API_CALL = `https://financialmodelingprep.com/api/v3/quote/${stockSymbol}?apikey=${API_Key}`;\n//     let stockChartXValuesFunction;\n//     let stockChartYValuesFunction;\n      \n//         fetch(API_CALL)\n//         .then(\n//             function(response){\n//                 return response.json()\n//             }\n//         )\n//         .then(\n//             function(data){\n//               console.log('fetch  data from FMP')\n//               console.log(data);\n  \n//               for(let key in data){\n//                 stockChartXValuesFunction= key;\n//                 stockChartYValuesFunction= (data[key]['price']);\n//               }\n//                  console.log(stockChartYValuesFunction);\n//                  setcurrentPrice(parseFloat(stockChartYValuesFunction).toFixed(2))\n//                  setSoldPrice(parseFloat(stockChartYValuesFunction).toFixed(2))\n\n                 \n//             }\n//         )\n        \n// }\n// fetchCompanyInfo()\n// // setTimeout(fetchCompanyInfo(), 50000);\n// }, [positions]);\n\n  if (!positions) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n    <>\n    \n    <main className=\"centered middled\">\n      <b>Fetching market data...</b>\n      <CircularProgress />\n      </main>\n    </>\n    )\n  }\n  const lineChartData = {\n    labels: stockChartXValues,\n    datasets: [\n      {\n        label: positions.stockSymbol,\n        data: stockChartYValues,\n        fill: false,\n        backgroundColor:stockChartYValues[0] > stockChartYValues[99] ? 'green' : 'red',\n        // borderColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: stockChartYValues[0] > stockChartYValues[99] ? 'green' : 'red'\n      },\n    ],\n  }\n  \n  const options = {\n    legend: {\n      display: true,\n    },\n    elements: {\n      point:{\n          radius: 0\n      }\n  },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n        },\n      ],\n      xAxes: [{\n        display: false,\n        ticks: {\n          reverse: true,\n        }\n    }]\n    },\n  }\n \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setbuyPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n\n   \n    const payload = {\n      stockSymbol,\n      stockName,\n      currentPrice,\n      buyPrice,\n      shares,\n      \n    };\n    createPosition(payload);\n  };\n\n  const handleClick = async (e) => {\n    console.log('symbol: ' + stockSymbol)\n    console.log('company: ' + stockName)\n    console.log('sellprice: ' + soldPrice)\n    const boughtPrice = positions.buyPrice\n    console.log('boughtprice: ' + boughtPrice)\n    const shares = positions.shares\n    console.log('shares: ' + shares)\n    \n    const payload ={\n    stockSymbol,\n    stockName,\n    soldPrice,\n    boughtPrice,\n    shares\n    };\n    createInstance(payload);\n    dispatch(exitPosition(positions.id));\n\n    \n    \n  }\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  const upOrDown = stockChartYValues[0] > stockChartYValues[99] ? 'background' : 'background2'\nreturn (\n    <div className=\"pokemon-detail\">\n      <div className={`pokemon-detail-image-${upOrDown}`}>\n        \n        <div className='header-element'>\n          <div className='company-logo'>\n        <img src={liveimage} alt=\"Company Logo\" />\n        </div>\n        <div className='company-titles'>\n        <h1 className=\"bigger\">{positions.stockSymbol}</h1>\n        <h1 className=\"bigger\">{stockName}</h1>\n        <h1 className=\"bigger\">${parseFloat(stockChartYValues[0]).toFixed(2)}</h1>\n        </div>\n        </div>\n      </div>\n      <div className=\"pokemon-detail-lists\">\n      \n        <div>\n        <Line data={lineChartData} options={options} />\n          \n        </div>\n        <div>\n          <h2>Your Position</h2>\n            <ul>\n              <li>\n                <b>Shares:</b> {positions.shares}\n              </li>\n              <li>\n                <b>Average Cost:</b> ${positions.buyPrice}\n              </li>\n              <li>\n                <b>Date Purchased:</b> {positions.createdAt}\n              </li>\n              <li>\n                <b>Market Value:</b> ${(positions.shares*currentPrice).toFixed(2)}\n              </li>\n              <li>\n                <b>Total Return:</b> ${(positions.shares*currentPrice-positions.shares*positions.buyPrice).toFixed(2)}\n              </li>\n            </ul>\n            <h2>Buy More</h2>\n            <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          placeholder=\"Shares\"\n          required\n          value={shares}\n          onChange={updateProperty(setshares)}\n        />\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n        \n        <button type=\"submit\">Buy Shares!</button>}\n        \n        </form>\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n            <button onClick={handleClick} >Exit Position</button>}\n            \n    \n        </div>\n      </div>\n      <div className='newsFeed'>\n      <h2>Stock Information</h2>\n          <ul>\n            <li>\n              <b>Symbol</b> {stockSymbol}\n            </li>\n            <li>\n              <b>Stock Name</b> {stockName}\n            </li>\n            <li>\n              <b>Current Price</b> ${parseFloat(stockChartYValues[0]).toFixed(2)}\n            </li>\n            <li>\n              <b>Exchange</b> {liveexchange}\n            </li>\n            <li>\n              <b>Company Description</b> {livedescription}\n            </li>\n            \n            \n          </ul>\n          <h2>News</h2>\n          {stories.map(story => {\n              return (\n                <div className='newsContainer' key={story.timestamp}>\n                    <div className='newsTitle'>\n                      \n                      <a className='newsLink' href={story.url}>{story.title}</a>\n                    </div>\n                    <div className='newsSummary'>\n                    {story.summary}\n                    </div>\n                     <img height='100%' width='100%' src={story.image} alt='news'></img>\n                 </div>\n              )\n            })}\n          </div>\n    </div>\n  );\n};\n\nconst PositionDetailContainer = () => {\n  const positions = useSelector((state) => state.positions[state.currentPosition]);\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n\n  return (\n\n    <PositionDetail\n    positions={positions}\n    history = {history}\n      getOnePosition={(id) => dispatch(getOnePosition(id))}\n      exitPosition={(id) => dispatch(exitPosition(id))}\n      createPosition={(positions) => dispatch(createPosition(positions))}\n      createInstance={(history) => dispatch(createInstance(history))}\n    />\n  \n  );\n};\n\nexport default PositionDetailContainer;\n","import { baseUrl } from \"../../config\";\n\nexport const LOAD_WATCHED = \"LOAD_WATCHED\";\nexport const EXIT_WATCHED = 'EXIT_WATCHED';\n\nexport const load = (watchedList) => ({ type: LOAD_WATCHED, watchedList });\n\n\n\nexport const createWatchedStock = (data) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    dispatch(getWatchedStocks());\n  }\n};\n\n\n\n\nexport const getWatchedStocks = () => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const watchedList = await response.json();\n    dispatch(load(watchedList));\n  } \n};\n\nexport const exitWatchedStock = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist/${id}`, {\n    method: \"delete\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    dispatch(getWatchedStocks());\n    window.location.replace('/')\n  }\n};","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import React, { useEffect, useState }  from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport { getPositions } from \"../store/actions/positions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {getHistoricalData} from '../store/actions/history';\nimport { DataGrid } from '@material-ui/data-grid';\n\n\n\n\n\n\n\n\n\n\nconst Orders = ({positions, history, getPositions, getHistoricalData}) => {\nconst [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    getPositions();\n  }, []);\n\n  useEffect(() => {\n    getHistoricalData();\n  }, []);\n  \n\n  useEffect(() => {\n    if (!history) {\n      return;\n    }\n\n const  mapHistoryToRows = () => {\n    const gridRows = history.map((instance) => {\n      return ({\n        id: instance.id,\n        date: instance.createdAt, \n        transaction: instance.deposit > 0 ? 'DEPOSIT: $'+ instance.deposit : (instance.shares !== 0 ?\n          'SELL' : 'WITHDRAWAL: $'+ instance.deposit),\n        symbol: instance.stockSymbol ? instance.stockSymbol : '',\n        companyName: instance.stockName,\n        shares: instance.shares,\n        purchasePrice: instance.boughtPrice,\n        currentPrice: instance.soldPrice,\n        percentChange: ((instance.soldPrice*instance.shares)-(instance.boughtPrice*instance.shares)).toFixed(2)\n      })\n\n    })\n    setRows(gridRows);\n  }\n  mapHistoryToRows();\n\n  }, [history]); \n\n  const columns = [\n    { field: 'date', headerName: 'Date', width: 130 },\n    { field: 'transaction', headerName: 'Transaction', width: 130 },\n    { field: 'symbol', headerName: 'Symbol', width: 90 },\n    { field: 'companyName', headerName: 'Company Name', width: 130 },\n    {\n      field: 'shares',\n      headerName: 'Shares',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'purchasePrice',\n      headerName: 'Purchase Price',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'currentPrice',\n      headerName: 'Sell Price',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'percentChange',\n      headerName: 'Profit',\n      type: 'number',\n      width: 130,\n    },\n    \n  ];\n  return (\n    <React.Fragment>\n      <Title>Portfolio Assets</Title>\n      <Table size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell>Purchase Date</TableCell>\n            <TableCell>Symbol</TableCell>\n            <TableCell>Company Name</TableCell>\n            <TableCell>Shares</TableCell>\n            <TableCell>Purchase Price</TableCell>\n            <TableCell>Current Price $</TableCell>\n            <TableCell align=\"right\">Total Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {positions.map((position) => (\n            <TableRow key={position.id}>\n              <TableCell>{position.createdAt}</TableCell>\n              <TableCell>{position.stockSymbol.toUpperCase()}</TableCell>\n              <TableCell>{position.stockName}</TableCell>\n              <TableCell>{position.shares}</TableCell>\n              <TableCell>${position.buyPrice}</TableCell>\n              <TableCell >{`$${position.currentPrice}`}</TableCell>\n          <TableCell align=\"right\">${(position.shares * position.currentPrice).toFixed(2)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Title>Portfolio History</Title>\n      {/* <Table size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Transaction</TableCell>\n            <TableCell>Symbol</TableCell>\n            <TableCell>Company Name</TableCell>\n            <TableCell>Shares</TableCell>\n            <TableCell>Purchase Price $</TableCell>\n            <TableCell>Sale Price $</TableCell>\n            <TableCell>Profit/Loss $</TableCell>\n            <TableCell align=\"right\">Percent Change %</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {history.map((instance) => (\n            <TableRow key={instance.id}>\n              <TableCell>{instance.createdAt}</TableCell>\n              <TableCell>{instance.deposit > 0 ? 'DEPOSIT: ' + '$'+ instance.deposit : 'SELL'}</TableCell>\n              <TableCell>{instance.stockSymbol ? instance.stockSymbol : ''}</TableCell>\n              <TableCell>{instance.stockName}</TableCell>\n              <TableCell>{instance.shares}</TableCell>\n              <TableCell>${instance.boughtPrice}</TableCell>\n              <TableCell >{`$${instance.soldPrice}`}</TableCell>\n              <TableCell >{`$${((instance.soldPrice*instance.shares)-(instance.boughtPrice*instance.shares)).toFixed(2)}`}</TableCell>\n              <TableCell align=\"right\">\n                {((instance.soldPrice/instance.boughtPrice)*100-100).toFixed(2) < 0 ? <span style={{color: 'red'}}>{((instance.soldPrice/instance.boughtPrice)*100-100).toFixed(2)}%</span> \n                : \n                <span>{((instance.soldPrice/instance.boughtPrice)*100-100).toFixed(2)}%</span>\n                }\n                \n                </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table> */}\n      <div style={{ height: 1000, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} pageSize={20} checkboxSelection />\n    </div>\n  \n    </React.Fragment>\n  );\n}\n\n\nconst OrdersContainer = () => {\n  const positions = useSelector((state) => Object.values(state.positions));\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n  return (\n    <Orders\n      positions={positions}\n      history={history}\n      getPositions={() => dispatch(getPositions())}\n      getHistoricalData={() => dispatch(getHistoricalData())}\n      \n    />\n  );\n};\n\nexport default OrdersContainer;","import React, { useEffect }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport {getHistoricalData} from '../store/actions/history';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createInstance } from \"../store/actions/history\";\n\n\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport function Deposits({getHistoricalData, history}) {\n  const classes = useStyles();\n  const year = new Date().getFullYear();\n  const month =new Date().getMonth()+1;\n  const date = new Date().getDate()\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getHistoricalData();\n  }, []);\n\n  const handleClick = async (e) => {\n    const deposit = 10000;\n    \n    const payload ={\n    deposit\n    };\n    await dispatch(createInstance(payload));\n  }\n\n  const takeOut = async (e) => {\n    const deposit = -10000;\n    \n    const payload ={\n    deposit\n    };\n    await dispatch(createInstance(payload));\n  }\n\n  const deposits = (history.reduce(function (accumulator, instance){\n    return accumulator +  parseFloat(instance.deposit);\n  }, 0)).toFixed(2);\n  return (\n    <React.Fragment>\n      <div className= 'userHeader'>\n      <Title>Portfolio Value</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {/* {history.map((instance) => (\n        <div>\n          Change: {parseInt(instance.deposit) + (parseInt(instance.soldPrice)*parseInt(instance.shares))-(parseInt(instance.boughtPrice)*parseInt(instance.shares))}\n        </div>\n        ))} */}\n        ${(history.reduce(function (accumulator, instance){\n          return accumulator + (instance.soldPrice*instance.shares)-(instance.boughtPrice*instance.shares);\n        }, parseFloat(deposits))).toFixed(2)}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {month + '/' + date + '/' + year}\n      </Typography>\n      <div>\n        <button onClick={handleClick} >Deposit $10000</button>\n        <button onClick={takeOut} >Withdrawal $10000</button>\n      </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst DepositsContainer = () => {\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n  return (\n    <Deposits\n      history={history}\n      getHistoricalData={() => dispatch(getHistoricalData())}\n      \n    />\n  );\n};\n\nexport default DepositsContainer;\n","import React, { useEffect, useState } from \"react\";\nimport polygonApi from './util/polygon';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst NewsFeed = props => {\n    const [stories, setStories] = useState([]);\n    const [isLoading, setIsLoading] = useState(true); \n    \n    useEffect(() => {\n        const fetchPositionNews = async () =>{\n          const polygon = polygonApi()\n          polygon.getQuote('SPY').then((response) => {\n          \n          \n            if(response.ok){\n                setIsLoading(false);\n              setStories(response.data)\n            }\n          });\n        }\n        fetchPositionNews();  \n        //setinterval would go here return the clear interval\n        //return ()=> clearInterval\n      }, []); \n      const loading = () => {\n        if (isLoading) {\n        return (\n        <>\n        \n        <main className=\"centered middled\">\n          <b>Fetching market data...</b>\n          <CircularProgress />\n          </main>\n        </>\n        )\n      }\n    }\n\n      return (\n        <div>\n        <h2>News</h2>\n        {loading}\n        {stories === [] ? 'You have reached your news fetch limit, try again later.' :\n        <div> \n        {stories.map(story => {\n            return (\n              <div className='newsContainer' key={story.timestamp}>\n                  <div className='newsTitle'>\n                    \n                    <a className='newsLink' href={story.url}>{story.title}</a>\n                  </div>\n                  <div className='newsSummary'>\n                  {story.summary}\n                  </div>\n                   <img height='100%' width='100%' src={story.image} alt='news'></img>\n               </div>\n            )\n          })}\n          </div>}\n        </div>\n      )\n}\n\n\n\nexport default NewsFeed;","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TopMovers = props => {\n    const [stories, setStories] = useState([]);\n    const [isLoading, setIsLoading] = useState(true); \n    \n    //  financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    \n    const fetchCompanyInfo = async () =>{\n      const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n      let API_CALL = `https://financialmodelingprep.com/api/v3/gainers?apikey=${API_Key}`;\n    //   let stockChartXValuesFunction = [];\n    //   let stockChartYValuesFunction = [];\n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            setIsLoading(false)\n            setStories(data)\n            // for(let key in data){\n            //   stockChartXValuesFunction.push(key);\n            //   stockChartYValuesFunction.push(data[key]['ticker']);\n            // }\n            //   console.log(stockChartXValuesFunction[0][companyName]);\n            //   console.log(stockChartYValuesFunction);\n            // setCompanyDescription(data[0]['description'])\n            // setExchange(data[0]['exchangeShortName'])\n            // setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, []);\n      const loading = () => {\n        if (isLoading) {\n        return (\n        <>\n        \n        <main className=\"centered middled\">\n          <b>Fetching market data...</b>\n          <CircularProgress />\n          </main>\n        </>\n        )\n      }\n    }\n\n      return (\n        <div>\n        <h2 style={{color: 'green'}}>Top Gainers</h2>\n        {loading}\n        {stories.slice(0, 5).map(story => {\n            return (\n              <div className='moversContainer' key={story.ticker}>\n                  <div className='newsTitle'>\n                  {story.ticker}\n                  <div>\n                  {story.companyName}\n                  </div>\n                   \n                  </div>\n                  <div className='newsSummary'>\n                  \n                  {story.price} +{story.changes}  <span style={{color: 'green'}} >{story.changesPercentage}</span>\n\n                  </div>\n                   \n               </div>\n            )\n          })}\n        </div>\n      )\n}\n\nexport default TopMovers;","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TopLosers = props => {\n    const [stories, setStories] = useState([]);\n    const [isLoading, setIsLoading] = useState(true); \n    \n    //  financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    \n    const fetchCompanyInfo = async () =>{\n      const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n      let API_CALL = `https://financialmodelingprep.com/api/v3/losers?limit=10&apikey=${API_Key}`;\n    //   let stockChartXValuesFunction = [];\n    //   let stockChartYValuesFunction = [];\n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            setIsLoading(false)\n            setStories(data)\n            // for(let key in data){\n            //   stockChartXValuesFunction.push(key);\n            //   stockChartYValuesFunction.push(data[key]['ticker']);\n            // }\n            //   console.log(stockChartXValuesFunction[0][companyName]);\n            //   console.log(stockChartYValuesFunction);\n            // setCompanyDescription(data[0]['description'])\n            // setExchange(data[0]['exchangeShortName'])\n            // setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, []);\n      const loading = () => {\n        if (isLoading) {\n        return (\n        <>\n        \n        <main className=\"centered middled\">\n          <b>Fetching market data...</b>\n          <CircularProgress />\n          </main>\n        </>\n        )\n      }\n    }\n\n      return (\n        <div>\n        <h2 style={{color: 'red'}}>Top Losers</h2>\n        {loading}\n        {stories.slice(0, 5).map(story => {\n            return (\n              <div className='moversContainer' key={story.ticker}>\n                  <div className='newsTitle'>\n                  {story.ticker}\n                  <div>\n                  {story.companyName}\n                  </div>\n                   \n                  </div>\n                  <div className='newsSummary'>\n                  \n                  {story.price} {story.changes}  <span style={{color: 'red'}} >{story.changesPercentage}</span>\n                  </div>\n                   \n               </div>\n            )\n          })}\n        </div>\n      )\n}\n\nexport default TopLosers;","import React, { useEffect, useState }  from 'react';\n\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport Orders from './dashboard/Orders'\nimport Deposits from './dashboard/Deposits'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {getHistoricalData} from './store/actions/history';\nimport { getPositions } from \"./store/actions/positions\";\nimport NewsFeed from './NewsFeed';\nimport TopMovers from './TopMovers';\nimport TopLosers from './TopLosers';\n\n\n\nconst UserDetail = ({getHistoricalData, history, positions, getPositions}) => {\n  const [stockChartXValues, setstockChartXValues] = useState([]);\n  const [stockChartYValues, setstockChartYValues] = useState([]);\n  \n  useEffect(() => {\n    getPositions();\n  }, []);\n\n  useEffect(() => {\n    getHistoricalData();\n  }, []);\n\n  //financial modeling prep fetch---------------------------------------------------\n  // useEffect(() => {\n    \n  //   const fetchCompanyInfo = async () =>{\n  //     const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n  //     let API_CALL = `https://financialmodelingprep.com/api/v3/gainers?apikey=${API_Key}`;\n  //     let stockChartXValuesFunction = [];\n  //     let stockChartYValuesFunction = [];\n    \n  //     fetch(API_CALL)\n  //     .then(\n  //         function(response){\n  //             return response.json()\n  //         }\n  //     )\n  //     .then(\n  //         function(data){\n  //           console.log('fetch  data from FMP')\n  //           console.log(data);\n\n  //           for(let key in data){\n  //             stockChartXValuesFunction.push(key);\n  //             stockChartYValuesFunction.push(data[key]['ticker']);\n  //           }\n  //             console.log(stockChartXValuesFunction[0][companyName]);\n  //             console.log(stockChartYValuesFunction);\n  //           // setCompanyDescription(data[0]['description'])\n  //           // setExchange(data[0]['exchangeShortName'])\n  //           // setImage(data[0]['image'])\n              \n  //         }\n  //     )\n  //   }\n  //   fetchCompanyInfo();  \n  //   //setinterval would go here return the clear interval\n  //   //return ()=> clearInterval\n  // }, []);\n  useEffect(() => {\n    if (!history) {\n      return;\n    }\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    let sum = 0;\n    const fetchLivePositions = async () =>{\n      \n        \n        history.map((instance) => {\n          \n          stockChartYValuesFunction.push(sum+= parseInt(instance.deposit) + (parseInt(instance.soldPrice)*parseInt(instance.shares))-(parseInt(instance.boughtPrice)*parseInt(instance.shares)))\n          stockChartXValuesFunction.push(instance.createdAt)\n        })\n    \n        }\n              \n  \n        setstockChartXValues(stockChartXValuesFunction)\n        setstockChartYValues(stockChartYValuesFunction)\n        // console.log(stockChartXValues)\n        // console.log(stockChartYValues)\n            \n        \n      \n      fetchLivePositions();\n    \n  \n  }, [history]);\n  const deposits = (history.reduce(function (accumulator, instance){\n    return accumulator +  parseFloat(instance.deposit);\n  }, 0)).toFixed(2);\n\n  const totalCash = (history.reduce(function (accumulator, instance){\n    return accumulator + (instance.soldPrice*instance.shares)-(instance.boughtPrice*instance.shares);\n  }, parseFloat(deposits))).toFixed(2);\n\n  const totalAssets = (positions.reduce(function (accumulator, position){\n    return accumulator + (position.currentPrice*position.shares);\n  }, 0)).toFixed(2);\n\n  const doughnutData = {\n    datasets: [{\n        data: [totalCash - totalAssets, totalAssets],\n        backgroundColor: [\n          totalCash - totalAssets > 0 ? 'green' : 'red',\n          'orange',\n        ],\n        borderColor: [\n          totalCash - totalAssets > 0 ? 'green' : 'red',\n          'orange',\n        ],\n        borderWidth: 5,\n    }],\n    \n\n    // These labels appear in the legend and in the tooltips when hovering different arcs\n    labels: [\n        'Cash',\n        'Assets'\n    ]\n};\n\n  const lineChartData = {\n    labels: stockChartXValues,\n    datasets: [\n      {\n        label: 'Portfolio Value',\n        data: stockChartYValues,\n        fill: false,\n        backgroundColor:stockChartYValues[0] < stockChartYValues[stockChartYValues.length-1] ? 'green' : 'red',\n        // borderColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: stockChartYValues[0] < stockChartYValues[stockChartYValues.length-1] ? 'green' : 'red',\n        \n      },\n    ],\n  }\n  \n  const options = {\n    legend: {\n      display: true,\n    },\n    elements: {\n      point:{\n          radius: 0\n      }\n  },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n        },\n      ],\n      xAxes: [{\n        display: false,\n    }]\n    },\n  }\n\n  const pieOptions= {\n    //cutoutPercentage: 40,\n   responsive: true,\n }\n\nreturn (\n  <div className=\"pokemon-detail\">\n    <div\n      className={`pokemon-detail-image-background`}>\n      <div>\n      <h1 className=\"bigger\">Welcome to Algo</h1>\n      </div>\n      \n    </div>\n    \n    <div>\n    <Deposits />\n    \n    </div>\n    <div className=\"user-detail\">\n      <div className=\"user-detail-chart\">\n        <Line data={lineChartData} options={options} />\n      </div>\n      <div className='doughnut'>\n        <Doughnut data={doughnutData} options={pieOptions} />\n      </div>\n      <div className='user-data-tables'>\n         <Orders />\n      </div>\n      \n      <div className='infoGrid__userNews'>\n      <NewsFeed />\n      </div>\n      <div className='infogrid__movers'>\n      <TopMovers />\n      <TopLosers />\n      </div>\n    \n      \n      \n    </div>\n  </div>\n);\n \n  };\n\n  \n\n  const UserDetailContainer = () => {\n    const positions = useSelector((state) => Object.values(state.positions));\n    const history = useSelector((state) => Object.values(state.history));\n    const dispatch = useDispatch();\n    return (\n      <UserDetail\n        history={history}\n        positions={positions}\n        getPositions={() => dispatch(getPositions())}\n        getHistoricalData={() => dispatch(getHistoricalData())}\n        \n      />\n    );\n  };\n  \n  export default UserDetailContainer;","import { baseUrl } from \"../../config\";\n\nexport const SET_CURRENT_WATCHED_STOCK = \"SET_CURRENT_WATCHED_STOCK\";\n\nexport const setCurrentWatchedStock = (current) => ({ type: SET_CURRENT_WATCHED_STOCK, current });\n\nexport const getOneWatchedStock = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const current = await response.json();\n    dispatch(setCurrentWatchedStock(current));\n  }\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport polygonApi from './util/polygon';\nimport { Line } from 'react-chartjs-2';\nimport { createPosition } from \"./store/actions/positions\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getOneWatchedStock} from \"./store/actions/current-watched-stock\";\n\n\n\n\nconst WatchListDetail = ({watchedStocks, getOneWatchedStock, createPosition}) => {\n  const [stories, setStories] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); \n  const [stockChartXValues, setstockChartXValues] = useState([]);\n  const [stockChartYValues, setstockChartYValues] = useState([]);\n  const [stockSymbol, setstockSymbol] = useState(\"\");\n  const [stockName, setstockName] = useState(\"\");\n  const [currentPrice, setcurrentPrice] = useState(\"\");\n  const [buyPrice, setbuyPrice] = useState(\"\");\n  const [shares, setshares] = useState(\"\");\n  const [livedescription, setCompanyDescription] = useState('');\n  const [liveimage, setImage] = useState('');\n  const [liveexchange, setExchange] = useState('');\n\n  // setstockName(data[0][companyName])\n  //           setCompanyDescription(data[0][description])\n  //           setExchange(data[0][exchangeShortName])\n  //           setImage(data[0][image])\n\n  \n\n  const { id } = useParams();\n \n\n  // useEffect(() => {\n  //   createInstance(id);\n  // }, [id]);\n  \n\n  useEffect(() => {\n    getOneWatchedStock(id);\n  }, [id]);\n\n  //financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    if (!watchedStocks) {\n      return;\n    }\n    const fetchCompanyInfo = async () =>{\n      const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n      let stockSymbol = watchedStocks.stockSymbol\n      let API_CALL = `https://financialmodelingprep.com/api/v3/profile/${stockSymbol}?apikey=${API_Key}`;\n     \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n          \n            setstockName(data[0]['companyName'])\n            setCompanyDescription(data[0]['description'])\n            setExchange(data[0]['exchangeShortName'])\n            setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [watchedStocks]);\n  //polygon news fetch -------------------------------------------------------------\n  useEffect(() => {\n    if (!watchedStocks) {\n      return;\n    }\n    const fetchPositionNews = async () =>{\n      const polygon = polygonApi()\n      polygon.getQuote(watchedStocks.stockSymbol).then((response) => {\n      \n        if(response.ok){\n          setStories(response.data)\n        }\n      });\n    }\n    fetchPositionNews();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [watchedStocks]);\n //alphavantage stock fetch -------------------------------------------------------------\n useEffect(() => {\n  if (!watchedStocks) {\n    return;\n  }\n  const fetchLivePositions = async () =>{\n    \n    const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n      let stockSymbol = watchedStocks.stockSymbol\n      let API_CALL = `https://financialmodelingprep.com/api/v3/historical-chart/5min/${stockSymbol}?apikey=${API_Key}`;\n      let stockChartXValuesFunction = [];\n      let stockChartYValuesFunction = [];\n    \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            // console.log('FMP Historical data Search')\n            //   console.log(data)\n              // setVolume(data['Time Series (5min)'][0][\"5. volume\"]);\n              setstockSymbol(watchedStocks.stockSymbol);\n              for(let key in data){\n                  stockChartXValuesFunction.push(key);\n                  stockChartYValuesFunction.push(data[key]['open']);\n              }\n              setIsLoading(false);\n              \n              setstockChartXValues(stockChartXValuesFunction)\n              setstockChartYValues(stockChartYValuesFunction)\n              setcurrentPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n              setbuyPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n            \n          }\n      )\n        }\n    fetchLivePositions();\n  \n\n}, [watchedStocks]);\n\n  if (!watchedStocks) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n    <>\n    \n    <main className=\"centered middled\">\n      <b>Fetching market data...</b>\n      <CircularProgress />\n      </main>\n    </>\n    )\n  }\n  const lineChartData = {\n    labels: stockChartXValues,\n    datasets: [\n      {\n        label: watchedStocks.stockSymbol,\n        data: stockChartYValues,\n        fill: false,\n        backgroundColor:stockChartYValues[0] > stockChartYValues[99] ? 'green' : 'red',\n        // borderColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: stockChartYValues[0] > stockChartYValues[99] ? 'green' : 'red'\n      },\n    ],\n  }\n  \n  const options = {\n    legend: {\n      display: true,\n    },\n    elements: {\n      point:{\n          radius: 0\n      }\n  },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n        },\n      ],\n      xAxes: [{\n        display: false,\n        ticks: {\n          reverse: true,\n        }\n    }]\n    },\n  }\n \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n  \n    const payload = {\n      stockSymbol,\n      stockName,\n      currentPrice,\n      buyPrice,\n      shares,\n      \n    };\n    createPosition(payload);\n  };\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  const upOrDown = stockChartYValues[0] > stockChartYValues[99] ? 'background' : 'background2'\nreturn (\n    <div className=\"pokemon-detail\">\n\n    <div className={`pokemon-detail-image-${upOrDown}`}>\n        \n        <div className='header-element'>\n          <div className='company-logo'>\n        <img src={liveimage} alt=\"Company Logo\" />\n        </div>\n        <div className='company-titles'>\n        <h1 className=\"bigger\">{watchedStocks.stockSymbol}</h1>\n        <h1 className=\"bigger\">{stockName}</h1>\n        <h1 className=\"bigger\">${parseFloat(stockChartYValues[0]).toFixed(2)}</h1>\n        </div>\n        </div>\n      </div>\n      <div className=\"pokemon-detail-lists\">\n      \n        <div>\n        <Line data={lineChartData} options={options} />\n          \n        </div>\n        <div>\n          \n            <h2>Buy</h2>\n            <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          placeholder=\"Shares\"\n          required\n          value={shares}\n          onChange={updateProperty(setshares)}\n        />\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n        <button type=\"submit\">Buy Shares!</button>}\n        \n      </form>\n              \n    \n        </div>\n      </div>\n      <div className='newsFeed'>\n      <h2>Stock Information</h2>\n          <ul>\n            <li>\n              <b>Symbol</b> {stockSymbol}\n            </li>\n            <li>\n              <b>Stock Name</b> {stockName}\n            </li>\n            <li>\n              <b>Current Price</b> ${parseFloat(stockChartYValues[0]).toFixed(2)}\n            </li>\n            <li>\n              <b>Exchange</b> {liveexchange}\n            </li>\n            <li>\n              <b>Company Description</b> {livedescription}\n            </li>\n            \n            \n          </ul>\n          <h2>News</h2>\n          {stories.map(story => {\n              return (\n                <div className='newsContainer' key={story.timestamp}>\n                    <div className='newsTitle'>\n                      \n                      <a className='newsLink' alt='news' href={story.url}>{story.title}</a>\n                    </div>\n                    <div className='newsSummary'>\n                    {story.summary}\n                    </div>\n                     <img height='100%' width='100%' src={story.image}></img>\n                 </div>\n              )\n            })}\n          </div>\n\n    </div>\n  );\n};\n  \n  const WatchedStockDetailContainer = () => {\n    const positions = useSelector((state) => state.positions[state.currentPosition]);\n    const dispatch = useDispatch();\n    const watchedStocks = useSelector((state) => state.watchedStocks[state.currentWatchedStock]);\n  \n    return (\n  \n      <WatchListDetail\n      watchedStocks ={watchedStocks}\n      positions = {positions}\n      getOneWatchedStock={(id) => dispatch(getOneWatchedStock(id))}\n      createPosition={(positions) => dispatch(createPosition(positions))}\n      />\n    \n    );\n  };\n  \n  export default WatchedStockDetailContainer;","import { createContext } from 'react';\n\nexport const SearchContext = createContext();","import React, { useState, useEffect, useContext } from 'react';\nimport { SearchContext } from './SearchContext';\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Line } from 'react-chartjs-2';\nimport { createPosition } from \"../store/actions/positions\";\nimport { createWatchedStock } from \"../store/actions/watched-stocks\";\nimport { hideForm } from \"../store/actions/ui\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\n\nconst SearchDetail = ({createPosition, createWatchedStock}) => {\n   const context = useContext(SearchContext);\n   const [isLoading, setIsLoading] = useState(true); \n   const [stockChartXValues, setstockChartXValues] = useState([]);\n   const [stockChartYValues, setstockChartYValues] = useState([]);\n   const [stockSymbol, setstockSymbol] = useState(\"\");\n   const [stockName, setstockName] = useState(\"\");\n   const [currentPrice, setcurrentPrice] = useState(\"\");\n   const [buyPrice, setbuyPrice] = useState(\"\");\n   const [shares, setshares] = useState(\"\");\n   const [liveexchange, setExchange] = useState('');\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n    console.log(stockSymbol)\n    console.log(stockName)\n    console.log(currentPrice)\n    console.log(buyPrice)\n    console.log(shares)\n      const payload = {\n        stockSymbol,\n        stockName,\n        currentPrice,\n        buyPrice,\n        shares,\n        \n      };\n      createPosition(payload);\n    };\n\n    const handleClick= (e) =>{    \n      e.preventDefault();    \n      const payload = {\n        stockSymbol,\n        stockName,\n        currentPrice,\n        \n      };\n      createWatchedStock(payload);\n    \n    }\n\n\n    \n    const updateProperty = (callback) => (e) => {\n      callback(e.target.value);\n    };\n     //financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    if (!context.searchQuery) {\n      return;\n    }\n    const fetchCompanyInfo = async () =>{\n      const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n      let stockSymbol = context.searchQuery\n      let API_CALL = `https://financialmodelingprep.com/api/v3/profile/${stockSymbol}?apikey=${API_Key}`;\n     \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n           \n            setstockName(data[0]['companyName'])\n            setstockSymbol(stockSymbol)\n            setExchange(data[0]['exchangeShortName'])\n              \n          }\n      ).catch(error => \n        setstockSymbol('INVALID SYMBOL')\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [context.searchQuery]);\n   //alphavantage stock fetch -------------------------------------------------------------\n   useEffect(() => {\n    if (!context.searchQuery) {\n      return;\n    }\n    const fetchLivePositions = async () =>{\n      \n      const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n      let stockSymbol = context.searchQuery\n      let API_CALL = `https://financialmodelingprep.com/api/v3/historical-chart/5min/${stockSymbol}?apikey=${API_Key}`;\n      let stockChartXValuesFunction = [];\n      let stockChartYValuesFunction = [];\n      \n      \n        fetch(API_CALL)\n        .then(\n            function(response){\n                return response.json()\n            }\n        ).catch(error =>  \n          setstockSymbol('INVALID SYMBOL')\n        )\n        .then(\n            function(data){\n            \n    \n                for(let key in data){\n                    stockChartXValuesFunction.push(key);\n                    stockChartYValuesFunction.push(data[key]['open']);\n                }\n                setIsLoading(false);\n                setstockChartXValues(stockChartXValuesFunction)\n                setstockChartYValues(stockChartYValuesFunction)\n                setcurrentPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n                setbuyPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n                \n            }\n        );\n          }\n      fetchLivePositions();\n    \n  \n  }, [context.searchQuery]);\n  \n    if (!context.searchQuery) {\n      return null;\n    }\n    if (isLoading) {\n      return (\n      <>\n      \n      <main >\n       \n        <CircularProgress />\n        </main>\n      </>\n      )\n    }\n  \n    const lineChartData = {\n      labels: stockChartXValues,\n      datasets: [\n        {\n          label: context.searchQuery,\n          data: stockChartYValues,\n          fill: false,\n          backgroundColor:stockChartYValues[0] > stockChartYValues[99] ? 'green' : 'red',\n          // borderColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: stockChartYValues[0] > stockChartYValues[99] ? 'green' : 'red'\n        },\n      ],\n    }\n    \n    const options = {\n      elements: {\n        point:{\n            radius: 0\n        }\n    },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: false,\n            },\n          },\n        ],\n        xAxes: [{\n          display: false,\n          ticks: {\n            reverse: true,\n          }\n      }]\n      },\n    }\n   \n  return (\n      <div className=\"pokemon-detail\">\n        \n        \n          <Line data={lineChartData} options={options} />\n          {stockSymbol !== 'INVALID SYMBOL' ? \n        <div className=\"pokemon-detail-lists\">\n          <div>\n            <h4>Stock Information</h4>\n            <ul>\n            <li>\n              <b>Symbol</b> {stockSymbol}\n            </li>\n            <li>\n              <b>Stock Name</b> {stockName}\n            </li>\n            <li>\n              <b>Current Price</b> ${parseFloat(stockChartYValues[0]).toFixed(2)}\n            </li>\n            <li>\n              <b>Exchange</b> {liveexchange}\n            </li>\n            {/* <li>\n              <b>Company Description</b> {livedescription}\n            </li> */}\n            \n            \n          </ul>\n          </div>\n            <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          placeholder=\"Shares\"\n          required\n          value={shares}\n          onChange={updateProperty(setshares)}\n        />\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n        <button type=\"submit\">Buy Shares!</button>}\n        <button onClick={handleClick} >Add to Watchlist</button>\n      </form>\n        </div>\n        :\n        <div className=\"centered middled\">\n          <b>Invalid symbol. Try again.</b>\n          </div>\n        }  \n        {/* <div className='newsFeed'>\n            {stories.map(story => {\n                return (\n                  <div className='newsContainer' key={story.timestamp}>\n                      <div className='newsTitle'>\n                        \n                        <a className='newsLink' target=\"_blank\" href={story.url}>{story.title}</a>\n                      </div>\n                      <div className='newsSummary'>\n                      {story.summary}\n                      </div>\n                       <img height='100%' width='100%' src={story.image}></img>\n                   </div>\n                )\n              })}\n            </div> */}\n      </div>\n    );\n  };\n  \n  const SearchDetailContainer = () => {\n    const dispatch = useDispatch();\n  \n    return (\n  \n      <SearchDetail\n      createPosition={(positions) => dispatch(createPosition(positions))}\n      createWatchedStock={(watchedStocks) => dispatch(createWatchedStock(watchedStocks))}\n      hideForm={() => dispatch(hideForm())}\n      />\n    \n    );\n  };\n  \n  export default SearchDetailContainer;","import React,{useContext, useState} from 'react';\nimport { SearchContext } from './SearchContext';\n\nconst SearchApp = () => {\n\n  const context = useContext(SearchContext);\n  const [inputValue, setInputValue] = useState('');\n\n  const updateInputVal = e => {\n    setInputValue(e.target.value.toUpperCase());\n  };\n\n  const searchForStock = e => {\n    e.preventDefault();\n    context.setSearchQuery(inputValue);\n  };\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={searchForStock} className=\"search-form\">\n        <input className=\"search-bar\" placeholder=\"Search Stock Symbol\" type=\"text\" value={inputValue} onChange={updateInputVal} />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchApp;\n","import React, { useState } from 'react';\nimport { SearchContext } from './SearchContext';\nimport SearchResults from './SearchResults';\nimport SearchApp from './SearchApp';\n\nconst SearchContainer = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <SearchContext.Provider value={{ searchQuery, setSearchQuery }}>\n      <SearchResults />\n      <SearchApp />\n    </SearchContext.Provider>\n  );\n};\n\nexport default SearchContainer;","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink, Route, Switch, useParams } from \"react-router-dom\";\n\nimport LogoutButton from \"./LogoutButton\";\nimport PositionDetail from \"./PositionDetail\";\n\nimport { getPositions } from \"./store/actions/positions\";\nimport {getWatchedStocks} from './store/actions/watched-stocks'\nimport {getHistoricalData} from './store/actions/history'\nimport UserDetail from './UserDetail';\nimport WatchListDetail from './WatchListDetail';\nimport { exitWatchedStock } from './store/actions/watched-stocks'\n\n\nimport SearchContainer from \"./search/SearchContainer\";\n\nconst PositionSidebar = ({ positions, formVisible, watchedStocks }) => {\n  const dispatch = useDispatch();\n  // const [currentPrices, setcurrentPrices] = useState([]);\n\n  useEffect(() => {\n    dispatch(getPositions())\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getWatchedStocks());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getHistoricalData());\n  }, [dispatch]);\n\n//   // fetching latest quote for each stock   \n//   useEffect(() => {                                    \n//   const fetchCurrentPrices = () =>{\n//     const API_Key = 'f04ddc95561236e9dccd1ffa355ad55b';\n//     let stockChartYValuesFunction;\n    \n//     const fetchedPrices = positions.map(position => { \n//       let stockSymbol = position.stockSymbol\n//       let API_CALL = `https://financialmodelingprep.com/api/v3/quote/${stockSymbol}?apikey=${API_Key}`;\n\n\n      \n//         return fetch(API_CALL)\n//         .then(\n//             function(response){\n//                 return response.json()\n//             }\n//         )\n//         .then(\n//             function(data){\n//               console.log('fetch  data from FMP')\n//               console.log(data)\n  \n          \n              \n//                 stockChartYValuesFunction= (data[0]['price']);\n//                 console.log(stockChartYValuesFunction)\n                         \n                 \n//             }\n//         )   \n// })\n// setcurrentPrices(fetchedPrices)\n\n// }\n// fetchCurrentPrices()\n// console.log(currentPrices);\n// // setInterval(fetchCurrentPrices(), 60000);\n// }, [dispatch]);\n\n  \n\n  const { id } = useParams();\n  const positionId = Number.parseInt(id);\n\n  if (!positions) {\n    return null;\n  }\n\n  if (!watchedStocks) {\n    return null;\n  }\n  return (\n    <main>\n      <LogoutButton />\n      \n          \n      <nav>\n        <Switch>\n      <SearchContainer />\n      \n      \n          </Switch>\n       \n        <div className='sidebar-label'>Stocks</div>\n        {positions.map((position) => {\n          return (\n            <NavLink key={position.id} to={`/position/${position.id}`}>\n              <div\n                className={\n                  positionId === position.id\n                    ? \"nav-entry is-selected\"\n                    : \"nav-entry\"\n                }\n              >\n                <div className='randomizer'\n                  >{((Math.random() * 3.00) + 1).toFixed(2) *(Math.round(Math.random()) * 2 - 1)}%</div>\n                <div>\n                  <div className=\"primary-text\">{position.stockName}</div>\n                  <div className=\"secondary-text\">\n                  {position.shares} share{ position.shares===1 ? '' : 's'} at ${position.currentPrice}     \n                  </div>\n\n                </div>\n              </div>\n            </NavLink>\n          );\n        })}\n        <div className='sidebar-label'>Watchlist</div>\n        {watchedStocks.map((watchedStock) => {\n          return (\n            <NavLink key={watchedStock.id} to={`/watchlist/${watchedStock.id}`}>\n              <div\n                className={\n                  positionId === watchedStock.id\n                    ? \"nav-entry is-selected\"\n                    : \"nav-entry\"\n                }\n              >\n                <div className='randomizer'\n                  >{((Math.random() * 3.00) + 1).toFixed(2) *(Math.round(Math.random()) * 2 - 1)}%</div>\n                <div>\n                  <div className=\"primary-text\">{watchedStock.stockName}</div>\n                  <div className=\"secondary-text\">\n                  <span onClick={async ()=> await dispatch(exitWatchedStock(watchedStock.id))} >Delete</span>\n                  </div>\n\n                </div>\n              </div>\n            </NavLink>\n          );\n        })}\n      </nav>\n      \n        <Switch>\n          <Route\n            exact={true}\n            path=\"/watchlist/:id\"\n            render={(props) => <WatchListDetail {...props} />}//component = {WatchLIstdetail}?\n          />\n          <Route\n            exact={true}\n            path=\"/position/:id\"\n            render={(props) => <PositionDetail {...props} />}  \n          />\n           <Route exact={true} path=\"/\" component={UserDetail} />\n        </Switch>\n      \n    </main>\n  );\n};\n\nconst PositionSidebarContainer = () => {\n  const positions = useSelector((state) => Object.values(state.positions));\n  const watchedStocks = useSelector((state) => Object.values(state.watchedStocks));\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n  return (\n    <PositionSidebar\n      positions={positions}\n      watchedStocks={watchedStocks}\n      history={history}\n     \n      \n      exitWatchedStock={(id) => dispatch(exitWatchedStock(id))}\n    />\n  );\n};\n\nexport default PositionSidebarContainer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from './store/actions/authentication';\nimport { createInstance } from './store/actions/history';\nimport {Link} from 'react-router-dom'; \nimport leaf from './leaf-clipart-12-transparent.png';\n\nconst SignUpForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [cashValue, setCashValue] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newUser = {\n        name,\n        email,\n        cashValue,\n      password,\n      confirmPassword,\n    };\n    \n    await dispatch(signUp(newUser));\n\n    const deposit = cashValue;\n    const payload ={\n      deposit\n    };\n    await dispatch(createInstance(payload));\n\n   \n  };\n\n  return (\n    <main className=\"centered middled\">\n      <img src={leaf} alt=\"img\" />\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Full Name'\n          value={name}\n          onChange={updateProperty(setName)}\n          required\n        />\n        <input\n          type='email'\n          placeholder='Email'\n          value={email}\n          onChange={updateProperty(setEmail)}\n          required\n        />\n         <input\n          type=\"number\"\n          placeholder=\"Deposit Amount\"\n          required\n          value={cashValue}\n          onChange={updateProperty(setCashValue)}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={updateProperty(setPassword)}\n        />\n        <input\n          type='password'\n          placeholder='Confirm Password'\n          value={confirmPassword}\n          onChange={updateProperty(setConfirmPassword)}\n        />\n        <button type='submit'>Sign Up</button>\n        <Link to=\"/login\">\n          <button type=\"button\">\n          Log in\n          </button>\n        </Link>\n      </form>\n    </main>\n  );\n};\n\nexport default SignUpForm;","import React from 'react'\n\nconst NotFound = props =>\n<h1>\n    Page not found\n</h1>\n;\n\nexport default NotFound;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter, Redirect, Switch, Route } from \"react-router-dom\";\n\nimport { loadToken } from \"./store/actions/authentication\";\nimport { ProtectedRoute, PrivateRoute } from \"./util/route-util\";\nimport LoginPanel from \"./LoginPanel\";\nimport PositionSidebar from \"./PositionSidebar\";\nimport SignUpForm from './SignUpForm';\nimport SearchDetailContainer from './search/SearchResults'\nimport NotFound from \"./NotFound\";\n\nconst App = ({ needLogin, loadToken }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoaded(true);\n    loadToken();\n  }, []);\n\n  if (!loaded) {\n    return null;\n  }\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute\n          path=\"/login\"\n          exact={true}\n          needLogin={needLogin}\n          component={LoginPanel}\n        />\n        <ProtectedRoute\n          path=\"/signup\"\n          exact={true}\n          needLogin={needLogin}\n          component={SignUpForm}\n        />\n        <PrivateRoute\n          path=\"/\"\n          needLogin={needLogin}\n          component={PositionSidebar}\n        />\n        <PrivateRoute\n          path=\"/search\"\n          needLogin={needLogin}\n          component={SearchDetailContainer}\n        />\n        <Route path='*' component={NotFound} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nconst AppContainer = () => {\n  const needLogin = useSelector((state) => !state.authentication.token);\n  const dispatch = useDispatch();\n  return <App needLogin={needLogin} loadToken={() => dispatch(loadToken())} />;\n};\n\nexport default AppContainer;\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport authentication from \"./reducers/authentication\";\nimport positions from \"./reducers/positions\";\nimport ui from \"./reducers/ui\";\nimport currentPosition from \"./reducers/current-position\";\nimport currentUser from \"./reducers/current-user\";\nimport watchedStocks from './reducers/watched-stocks';\nimport history from './reducers/history';\nimport currentWatchedStock from './reducers/current-watched-stock'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({\n  authentication,\n  positions,\n  ui,\n  currentPosition,\n  currentUser,\n  watchedStocks,\n  currentWatchedStock,\n  history\n});\n\nconst configureStore = (initialState) => {\n  return createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n};\n\nexport default configureStore;\n","import { SET_TOKEN, REMOVE_TOKEN } from \"../actions/authentication\";\n\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case SET_TOKEN: {\n      return {\n        ...state,\n        token: action.token,\n      };\n    }\n\n    case REMOVE_TOKEN: {\n      const newState = { ...state };\n      delete newState.token;\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import merge from \"lodash/merge\";\nimport { LOAD, EXIT } from \"../actions/positions\";\nimport { SET_CURRENT } from \"../actions/current-position\";\n\n\nexport default function reducer(state = {}, action) {\n  Object.freeze(state);\n\n  switch (action.type) {\n    case LOAD: {\n      const positions = action.list.map((position) => ({ [position.id]: position }));\n      return merge({}, state, ...positions);\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        [action.current.id]: action.current,\n      };\n    }\n    case EXIT: {\n      let newState = {...state }\n      delete newState[action.current.id]\n      return{\n      ...newState,\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import { HIDE_FORM, SHOW_FORM } from \"../actions/ui\";\n\nexport default function reducer(state = { formVisible: false }, action) {\n  switch (action.type) {\n    case HIDE_FORM: {\n      return {\n        ...state,\n        formVisible: false,\n      };\n    }\n\n    case SHOW_FORM: {\n      return {\n        ...state,\n        formVisible: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT } from \"../actions/current-position\";\n\nexport default function reducer(state = null, action) {\n  switch (action.type) {\n    case SET_CURRENT: {\n      return action.current.id;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/current-user\";\n\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER: {\n      return {\n        ...state, \n        currentUser: action.id\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import merge from \"lodash/merge\";\nimport { LOAD_WATCHED, EXIT_WATCHED } from \"../actions/watched-stocks\";\n\n\nexport default function reducer(state = {}, action) {\n  Object.freeze(state);\n  switch (action.type) {\n    \n    case LOAD_WATCHED: {\n      const watchedStocks = action.watchedList.map((watchedStock) => ({ [watchedStock.id]: watchedStock }));\n        return merge({}, state, ...watchedStocks);\n      \n  }\n    \n    case EXIT_WATCHED: {\n      let newState = {...state }\n      delete newState[action.current.id]\n      return{\n      ...newState,\n      }\n    }\n    default:\n      return state;\n  }\n}","import {SET_CURRENT_WATCHED_STOCK} from '../actions/current-watched-stock';\n\nexport default function reducer(state = null, action) {\n  switch (action.type) {\n    case SET_CURRENT_WATCHED_STOCK: {\n        return action.current.id;\n      }\n\n    default:\n      return state;\n  }\n}","import merge from \"lodash/merge\";\nimport { LOAD_HISTORY } from \"../actions/history\";\n\n\nexport default function reducer(state = {}, action) {\n  Object.freeze(state);\n\n  switch (action.type) {\n    case LOAD_HISTORY: {\n      const history = action.historyList.map((instance) => ({ [instance.id]: instance }));\n      return merge({}, state, ...history);\n    }\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/leaf-clipart-12-transparent.49990580.png\";"],"sourceRoot":""}